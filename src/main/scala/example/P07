package example

/**
 * Flatten a nested list structure.
 * Example:
 * scala> flatten(List(List(1, 1), 2, List(3, List(5, 8))))
 * res0: List[Any] = List(1, 1, 2, 3, 5, 8)
 */

object P07 {
  def flatten(list: List[Any]): List[Any] =
    list match {
    case (x:List[_]) :: xs => flatten(x) ::: flatten(xs)
    case x :: xs => x :: flatten(xs)
    case _ => Nil
  }
}

// `:::` はList同士を連結した新しいListを返す
//   def :::[B >: A](prefix: List[B]): List[B] =
//    if (isEmpty) prefix
//    else if (prefix.isEmpty) this
//    else (new ListBuffer[B] ++= prefix).prependToList(this)

// scala> List(1, 2, 3) ::: List(4, 5, 6)
//res0: List[Int] = List(1, 2, 3, 4, 5, 6)